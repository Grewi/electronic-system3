<?php

/**
 * Параметры установщика:
 * Первый параметр указыает на элемент установки
 * n  Полный путь в namespace, по умолчанию путь короткий
 * f  Перезаписывать файлы при копировании
 * d  Режим разработки. Не распаковывает и не удаляет items
 */

use system\inst\classes\installItem;
use system\inst\classes\functions;
use system\inst\classes\text;

use system\inst\classes\install;
use system\inst\classes\item;

define('ENTRANSE', 'install');
define('INDEX', true);
define('ROOT', str_replace('\\', '/', dirname(__DIR__)));
define('SYSTEM', ROOT . '/system');
define('INST', SYSTEM . '/inst');
define('ITEMS', INST . '/items');
define('INSTALL_INI', ROOT . '/install.ini');
define('INSTALL_JSON', ROOT . '/install.json');
require_once SYSTEM . '/system.php';
ob_end_clean();

$install = new install();

text::install($install);
functions::parametrs($install);
functions::unpuckItems($install);

if (empty($install->param)) {
    text::p()->danger( 'Необходимо указать компонент установки.')->e();
    text::p()->print('Для установки доступны: ')->e();
    functions::infoListItem();
    text::p()->print('--------------------------------------')->e();
    text::p()->print('Также можно использовать параметр ')->warn('all')
        ->print(' для автоматической установки. Для этого необходимо создать и настроить файл install.ini в корне проекта')->e();
    text::p()->print('Для создания файла можно использовать команду')->warn(' "php system/install install.ini"')->exit();
}

if($install->param == 'all'){
    if (!file_exists(INSTALL_INI)) {
        text::p()->danger('Отсутствует файл install.ini')->e();
        text::p()->print('Для создания файла можно использовать команду')->warn(' "php system/install install.ini"')->exit();
    }    
    $all = functions::listItemsForInstall($install);
    if(count($all) <= 0){
        text::p()->danger('Нет элементов для установки.')->e();
    }  
    foreach ($all as $a => $i) {
        foreach ($i as $aa => $ii) {
            $item = new item($install->param);
            $item->name = $aa;
            $item->app = $a;
            $item->params['app'] = $a;
            functions::constantFilesItem($item);
            foreach($ii as $aaa => $iii){
                $item->params[$aaa] = $iii;
            }
            new installItem($install, $item);
        }
    }
}elseif($install->param == 'install.ini'){
    functions::installIni($install);
}else{

    $item = new item($install->param);
    $item->app = $install->params['app'];
    $item->params = $install->params;
    functions::constantFilesItem($item);
    new installItem($install, $item);
}

functions::delItems($install);