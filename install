<?php

use system\inst\classes\installItem;
use system\inst\classes\functions;
use system\core\app\app;
use system\core\zip\zip;
use system\core\files\files;

$app = app::app();

define('ENTRANSE', 'install');
define('INDEX', true);
define('ROOT', str_replace('\\', '/', dirname(__DIR__)));
define('SYSTEM', ROOT . '/system');
define('INST', SYSTEM . '/inst');
define('ITEMS', INST . '/items');
define('INSTALL_INI', ROOT . '/install.ini');
define('INSTALL_JSON', ROOT . '/install.json');
require_once SYSTEM . '/system.php';

functions::parametrs();

functions::unpuckItems();

if (empty($app->param)) {
    functions::print('Необходимо указать компонент установки.');
    functions::print('Для установки доступны: ');
    functions::infoListItem();
    functions::print('--------------------------------------');
    functions::print('Также можно использовать параметр all для автоматической установки. ' . PHP_EOL . ' 
    Для этого необходимо создать и настроить файл install.ini в корне проекта', true);
}

if($app->param == 'all'){
    $all = functions::listItemsForInstall();
    if(count($all) <= 1){
        functions::print('Нет элементов для установки.', true);
    }
    foreach ($all as $a => $i) {
        foreach ($i as $aa => $ii) {
            $app->item->clean();
            $app->item->name = $aa;
            functions::constantFilesItem();
            $app->item->params->app = $a;
            foreach($ii as $aaa => $iii){
                $app->item->params->{$aaa} = $iii;
            }
            new installItem();
        }
    }
}elseif($app->param == 'install.ini'){
    functions::installIni();
}else{
    
    $app->item->name = $app->param;
    $app->item->params->app = $app->params->app;
    functions::constantFilesItem();
    new installItem();
}

// files::deleteDir(SYSTEM . '/inst');