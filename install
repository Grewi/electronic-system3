<?php

/**
 * Параметры установщика:
 * Первый параметр указыает на элемент установки
 * n  Полный путь в namespace, по умолчанию путь короткий
 * f  Перезаписывать файлы при копировании
 * d  Режим разработки. Не распаковывает и не удаляет items
 */

use system\inst\classes\installItem;
use system\inst\classes\functions;
use system\core\app\app;
use system\inst\classes\text;

define('ENTRANSE', 'install');
define('INDEX', true);
define('ROOT', str_replace('\\', '/', dirname(__DIR__)));
define('SYSTEM', ROOT . '/system');
define('INST', SYSTEM . '/inst');
define('ITEMS', INST . '/items');
define('INSTALL_INI', ROOT . '/install.ini');
define('INSTALL_JSON', ROOT . '/install.json');
require_once SYSTEM . '/system.php';
$app = app::app();

functions::parametrs();
functions::unpuckItems();

if (empty($app->param)) {
    text::danger('Необходимо указать компонент установки.');
    text::print('Для установки доступны: ');
    functions::infoListItem();
    text::print('--------------------------------------');
    text::print('Также можно использовать параметр ' . text::color('all', 'Yellow')  . ' для автоматической установки. ' . PHP_EOL . ' 
    Для этого необходимо создать и настроить файл install.ini в корне проекта', true);
}

if($app->param == 'all'){
    if (!file_exists(INSTALL_INI)) {
        text::danger('Отсутствует файл install.ini');
        text::print('Для создания файла можно использовать команду "php system/install install.ini"', true);
    }    

    $all = functions::listItemsForInstall();
    if(count($all) <= 0){
        text::danger('Нет элементов для установки.', true);
    }
    foreach ($all as $a => $i) {

        foreach ($i as $aa => $ii) {
            $app->item->clean();
            $app->item->name = $aa;
            functions::constantFilesItem();
            $app->item->params->app = $a;
            foreach($ii as $aaa => $iii){
                $app->item->params->{$aaa} = $iii;
            }
            new installItem();
        }
    }
}elseif($app->param == 'install.ini'){
    functions::installIni();
}else{
    
    $app->item->name = $app->param;
    $app->item->params->app = $app->params->app;
    functions::constantFilesItem();
    new installItem();
}

functions::delItems();